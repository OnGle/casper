#! /bin/sh
### BEGIN INIT INFO
# Provides:          casper
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Should-Start:      $local_fs
# Should-Stop:       $local_fs
# Default-Start:     1 2 3 4 5
# Default-Stop:      0 6
# Short-Description: Casper umount pdevs
# Description:       Umount pdevs mounted by casper
### END INIT INFO

# Author: Alon Swartz <alon@sterilesecurity.com>
#
PATH=/usr/sbin:/usr/bin:/sbin:/bin
NAME=casper
SCRIPTNAME=/etc/init.d/${NAME}

# Exit if system was not booted by casper
grep -qs boot=casper /proc/cmdline || exit 0

# Load the VERBOSE setting and other rcS variables
[ -f /etc/default/rcS ] && . /etc/default/rcS

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

remove_loop() {
    local pdev="${1}"

    for loopdev in "/dev/loop"*; do
        loop_fspath=$(losetup ${loopdev} | awk '{print $3}' | tr -d '()')
	loop_basename=$(basename "${loop_fspath}")
	if [ "${loop_basename}" = "${pdev}" ]; then
            losetup -d "${loopdev}"
            return 0
        fi
    done
    return 1
}

crypto_close () {
    crypto_dev="${1}"
    crypto_map=$(basename "${crypto_dev}")
    /sbin/cryptsetup -q luksClose "${crypto_map}" > /dev/null 2>&1
    remove_loop "${crypto_map}"
}

#not very clever at present, but good enough for now
do_stop ()
{
    log_begin_msg "Unmounting persistent devices" 

    cat /proc/mounts | grep /dev/mapper | \
    while read DEV MOUNTP FSTYPE REST; do
	umount ${MOUNTP}
	crypto_close ${DEV}
    done

    log_action_end_msg $?
}

case "$1" in
    start|restart|reload|force-reload|status)
        [ "$VERBOSE" != no ] && log_end_msg 0
        ;;
    stop)
        do_stop
        ;;
    *)
        log_success_msg "Usage: $SCRIPTNAME {stop}" >&2
        exit 3
        ;;
esac

